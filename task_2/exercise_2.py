st = "Я помню чудное мгновенье:\n\
Передо мной явилась ты,\n\
Как мимолетное виденье,\n\
Как гений чистой красоты.\n\
\n\
В томленьях грусти безнадежной,\n\
В тревогах шумной суеты,\n\
Звучал мне долго голос нежный\n\
И снились милые черты.\n\
\n\
Шли годы. Бурь порыв мятежный\n\
Рассеял прежние мечты,\n\
И я забыл твой голос нежный,\n\
Твои небесные черты.\n\
\n\
В глуши, во мраке заточенья\n\
Тянулись тихо дни мои\n\
Без божества, без вдохновенья,\n\
Без слез, без жизни, без любви.\n\
\n\
Душе настало пробужденье:\n\
И вот опять явилась ты,\n\
Как мимолетное виденье,\n\
Как гений чистой красоты.\n\
\n\
И сердце бьется в упоенье,\n\
И для него воскресли вновь\n\
И божество, и вдохновенье,\n\
И жизнь, и слезы, и любовь."

# Записываем в текстовый файл предложенный текст в переменной st.
file_1 = open("text_1.txt", "w", encoding="utf-8")
print(st, file=file_1)
file_1.close()

text = open('text_1.txt', 'r', encoding="utf-8")


# Функция получающая строку текста, и заменяет в ней:
# ●	все знаки препинания и переходы строк на « »,
# ●	устраняет множественные пробелы.
def str_transformer_2(line):
    if line != "\n":
        str_line = (line.strip()
                     .replace(",", "")
                     .replace(".", "")
                     .replace(":", ""))
        return str_line

# Функция получает строку line, разрезает её по переданному разделителю sep_1, возвращает список
# из подстрок – «слов», и количество подстрок.
def str_transformer_3(line, sep_1):
    List_result = list(line.strip().split(sep_1))
    Len_list_result = len(List_result)
    return List_result, Len_list_result

# Функция для создания упорядоченного по алфавиту словаря с частотой использованных слов.
# Словарь должен быть регистронезависимым («Без» и «без» - это одно слово).
def def_result_dict(txt, sep_2):
    dict_word = dict()
    for line_1 in txt.readlines():
        if line_1 != "\n":
            str_result = str_transformer_2(line_1).lower()
            list_words = str_transformer_3(str_result, sep_2)[0]
            for word in list_words:
                if word in dict_word:
                    dict_word[word] += 1
                else:
                    dict_word[word] = 1
    return dict(sorted(dict_word.items()))

# Выводим упорядоченный по алфавиту словарь с частотой использованных слов.
print(def_result_dict(text, ' '))




